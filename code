{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM6vPlKsQihOwgkWG3YKSLk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kRyx9cfhbdgn","executionInfo":{"status":"ok","timestamp":1706508582688,"user_tz":-330,"elapsed":3885,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"13fcf048-4b2f-44f8-98af-027db070b1da"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["# Loading dataset"],"metadata":{"id":"ziu5csMpctUL"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# Specify the file name you uploaded\n","file_name = \"/content/drive/MyDrive/Breast_cancer_data.csv\"\n","\n","# Load the CSV file into a Pandas DataFrame\n","df = pd.read_csv(file_name)"],"metadata":{"id":"naGnyCWdceBb","executionInfo":{"status":"ok","timestamp":1706508582689,"user_tz":-330,"elapsed":22,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_UXlO5frc_OA","executionInfo":{"status":"ok","timestamp":1706508582690,"user_tz":-330,"elapsed":22,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"8906914b-f2b7-41d9-c0d2-703e53ac09a0"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   mean_radius  mean_texture  mean_perimeter  mean_area  mean_smoothness  \\\n","0        17.99         10.38          122.80     1001.0          0.11840   \n","1        20.57         17.77          132.90     1326.0          0.08474   \n","2        19.69         21.25          130.00     1203.0          0.10960   \n","3        11.42         20.38           77.58      386.1          0.14250   \n","4        20.29         14.34          135.10     1297.0          0.10030   \n","\n","   diagnosis  \n","0          0  \n","1          0  \n","2          0  \n","3          0  \n","4          0  "],"text/html":["\n","  <div id=\"df-91a075da-2a1b-486c-9252-54198f9ee70a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean_radius</th>\n","      <th>mean_texture</th>\n","      <th>mean_perimeter</th>\n","      <th>mean_area</th>\n","      <th>mean_smoothness</th>\n","      <th>diagnosis</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91a075da-2a1b-486c-9252-54198f9ee70a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-91a075da-2a1b-486c-9252-54198f9ee70a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-91a075da-2a1b-486c-9252-54198f9ee70a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-64a35666-a3a2-4b32-867a-96794ef08a63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64a35666-a3a2-4b32-867a-96794ef08a63')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-64a35666-a3a2-4b32-867a-96794ef08a63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8RXH9Yn7dAty","executionInfo":{"status":"ok","timestamp":1706508582690,"user_tz":-330,"elapsed":20,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"caf9f6a0-c325-4c1f-fa7c-82c95a65bfb9"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(569, 6)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2JTtGhpTdUUn","executionInfo":{"status":"ok","timestamp":1706508582690,"user_tz":-330,"elapsed":18,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"42a32116-b5ae-461e-ab85-4ad6c08fbe1d"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mean_radius        0\n","mean_texture       0\n","mean_perimeter     0\n","mean_area          0\n","mean_smoothness    0\n","diagnosis          0\n","dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"bX27xcVfdYZC","executionInfo":{"status":"ok","timestamp":1706508582691,"user_tz":-330,"elapsed":17,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"00552c97-f36b-4faf-b814-993e10e04626"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       mean_radius  mean_texture  mean_perimeter    mean_area  \\\n","count   569.000000    569.000000      569.000000   569.000000   \n","mean     14.127292     19.289649       91.969033   654.889104   \n","std       3.524049      4.301036       24.298981   351.914129   \n","min       6.981000      9.710000       43.790000   143.500000   \n","25%      11.700000     16.170000       75.170000   420.300000   \n","50%      13.370000     18.840000       86.240000   551.100000   \n","75%      15.780000     21.800000      104.100000   782.700000   \n","max      28.110000     39.280000      188.500000  2501.000000   \n","\n","       mean_smoothness   diagnosis  \n","count       569.000000  569.000000  \n","mean          0.096360    0.627417  \n","std           0.014064    0.483918  \n","min           0.052630    0.000000  \n","25%           0.086370    0.000000  \n","50%           0.095870    1.000000  \n","75%           0.105300    1.000000  \n","max           0.163400    1.000000  "],"text/html":["\n","  <div id=\"df-25c8c9e4-33ad-497c-86df-8412b519fa00\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean_radius</th>\n","      <th>mean_texture</th>\n","      <th>mean_perimeter</th>\n","      <th>mean_area</th>\n","      <th>mean_smoothness</th>\n","      <th>diagnosis</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>569.000000</td>\n","      <td>569.000000</td>\n","      <td>569.000000</td>\n","      <td>569.000000</td>\n","      <td>569.000000</td>\n","      <td>569.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>14.127292</td>\n","      <td>19.289649</td>\n","      <td>91.969033</td>\n","      <td>654.889104</td>\n","      <td>0.096360</td>\n","      <td>0.627417</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.524049</td>\n","      <td>4.301036</td>\n","      <td>24.298981</td>\n","      <td>351.914129</td>\n","      <td>0.014064</td>\n","      <td>0.483918</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>6.981000</td>\n","      <td>9.710000</td>\n","      <td>43.790000</td>\n","      <td>143.500000</td>\n","      <td>0.052630</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>11.700000</td>\n","      <td>16.170000</td>\n","      <td>75.170000</td>\n","      <td>420.300000</td>\n","      <td>0.086370</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>13.370000</td>\n","      <td>18.840000</td>\n","      <td>86.240000</td>\n","      <td>551.100000</td>\n","      <td>0.095870</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>15.780000</td>\n","      <td>21.800000</td>\n","      <td>104.100000</td>\n","      <td>782.700000</td>\n","      <td>0.105300</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>28.110000</td>\n","      <td>39.280000</td>\n","      <td>188.500000</td>\n","      <td>2501.000000</td>\n","      <td>0.163400</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25c8c9e4-33ad-497c-86df-8412b519fa00')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-25c8c9e4-33ad-497c-86df-8412b519fa00 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-25c8c9e4-33ad-497c-86df-8412b519fa00');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4f52a4a0-595d-4b56-a598-0e08cdf31f63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4f52a4a0-595d-4b56-a598-0e08cdf31f63')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4f52a4a0-595d-4b56-a598-0e08cdf31f63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["# 1 | Data Preprocessing\n","## Prepare the dataset before training"],"metadata":{"id":"YKV3vZAYcecj"}},{"cell_type":"markdown","source":["## Train test split"],"metadata":{"id":"JtdpYFtQiAAs"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X = df.iloc[:,:-1].values\n","y = df.iloc[:,-1].values\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)"],"metadata":{"id":"gKeX7vR7fwlX","executionInfo":{"status":"ok","timestamp":1706508582691,"user_tz":-330,"elapsed":16,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_train = sc.fit_transform(X_train)\n","X_test = sc.transform(X_test)"],"metadata":{"id":"iMcwU9vMzbtz","executionInfo":{"status":"ok","timestamp":1706508582691,"user_tz":-330,"elapsed":16,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["print(f\"Train shapes : X = {X_train.shape}, y = {y_train.shape}\")\n","print(f\"Test shapes  : X = {X_test.shape},  y = {y_test.shape}\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_ucvw7XYzpoA","executionInfo":{"status":"ok","timestamp":1706508582691,"user_tz":-330,"elapsed":15,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"0fe110a6-1cb4-419e-9f81-0f94dda42efe"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Train shapes : X = (455, 5), y = (455,)\n","Test shapes  : X = (114, 5),  y = (114,)\n","\n"]}]},{"cell_type":"markdown","source":["## Defining the models and Training them"],"metadata":{"id":"omBGtWVqjNk5"}},{"cell_type":"code","source":["from sklearn.ensemble import BaggingClassifier,RandomForestClassifier,GradientBoostingClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC\n","svm = SVC(kernel = 'linear')\n","from sklearn.svm import SVC\n","kesvm = SVC(kernel = 'rbf')\n","gc, bc, rfc,gbc, kn,gnb, cl  = DecisionTreeClassifier(),BaggingClassifier(),RandomForestClassifier(n_estimators = 10, criterion = 'entropy'),GradientBoostingClassifier(),KNeighborsClassifier(n_neighbors=5,algorithm='brute',p=1),GaussianNB(), LogisticRegression()\n","gc.fit(X_train, y_train)\n","bc.fit(X_train, y_train)\n","rfc.fit(X_train, y_train)\n","gbc.fit(X_train, y_train)\n","kn.fit(X_train, y_train)\n","gnb.fit(X_train, y_train)\n","cl.fit(X_train, y_train)\n","svm.fit(X_train, y_train)\n","kesvm.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"8PePlZavh8HJ","executionInfo":{"status":"ok","timestamp":1706508583705,"user_tz":-330,"elapsed":1027,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"d0274529-b3ad-40b3-824f-e4ef98ab675c"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["## Make predictions"],"metadata":{"id":"hPFz1bzbkaLg"}},{"cell_type":"markdown","source":["### Prediction on training dataset"],"metadata":{"id":"L3uytgkQuvEd"}},{"cell_type":"code","source":["pg = gc.predict(X_train)\n","pm = bc.predict(X_train)\n","pb = rfc.predict(X_train)\n","pc = rfc.predict(X_train)\n","pk = rfc.predict(X_train)\n","ps = gnb.predict(X_train)\n","pt = cl.predict(X_train)\n","pu = svm.predict(X_train)\n","pr = kesvm.predict(X_train)"],"metadata":{"id":"xBXxnUaytkHb","executionInfo":{"status":"ok","timestamp":1706508583707,"user_tz":-330,"elapsed":16,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["### Prediction on testing dataset"],"metadata":{"id":"ZngSHFyNu7LE"}},{"cell_type":"code","source":["ypg = gc.predict(X_test)\n","ypm = bc.predict(X_test)\n","ypb = rfc.predict(X_test)\n","ypc = rfc.predict(X_test)\n","ypk = rfc.predict(X_test)\n","yps = gnb.predict(X_test)\n","ypt = cl.predict(X_test)\n","ypu = svm.predict(X_test)\n","ypr = kesvm.predict(X_test)"],"metadata":{"id":"NGsVsz7Vkbyh","executionInfo":{"status":"ok","timestamp":1706508583708,"user_tz":-330,"elapsed":16,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}}},"execution_count":27,"outputs":[]},{"cell_type":"markdown","source":["## Evaluation"],"metadata":{"id":"UBAyTsdGJz9w"}},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","dd=confusion_matrix(y_test, ypg)\n","bb=confusion_matrix(y_test, ypm)\n","rr=confusion_matrix(y_test, ypb)\n","gg=confusion_matrix(y_test, ypc)\n","kk=confusion_matrix(y_test, ypk)\n","gn=confusion_matrix(y_test, yps)\n","ll=confusion_matrix(y_test, ypt)\n","ss=confusion_matrix(y_test, ypu)\n","ks=confusion_matrix(y_test, ypr)\n","\n","print(\"DecisionTree  confusion_matrix \",dd)\n","print(\"BaggingClassifier confusion_matrix \",bb)\n","print(\"RandomForestClassifier confusion_matrix \",rr)\n","print(\"GradientBoostingClassifier confusion_matrix \",gg)\n","print(\"KNeighborsClassifier confusion_matrix \",kk)\n","print(\"Gaussian confusion_matrix \",gn)\n","print(\"LogisticRegression confusion_matrix \",ll)\n","print(\"Support Vector Machine confusion_matrix \",ss)\n","print(\"SVC confusion_matrix \",ks)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jrSCpEuoI4tY","executionInfo":{"status":"ok","timestamp":1706508583709,"user_tz":-330,"elapsed":16,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"d3a0cfd4-a157-44d1-b40e-7cc0ff1bf790"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["DecisionTree  confusion_matrix  [[40  3]\n"," [ 6 65]]\n","BaggingClassifier confusion_matrix  [[41  2]\n"," [ 6 65]]\n","RandomForestClassifier confusion_matrix  [[41  2]\n"," [ 5 66]]\n","GradientBoostingClassifier confusion_matrix  [[41  2]\n"," [ 5 66]]\n","KNeighborsClassifier confusion_matrix  [[41  2]\n"," [ 5 66]]\n","Gaussian confusion_matrix  [[37  6]\n"," [ 0 71]]\n","LogisticRegression confusion_matrix  [[39  4]\n"," [ 3 68]]\n","Support Vector Machine confusion_matrix  [[39  4]\n"," [ 3 68]]\n","SVC confusion_matrix  [[40  3]\n"," [ 3 68]]\n"]}]},{"cell_type":"markdown","source":["### Accuracy on training dataset"],"metadata":{"id":"-mchRsBKv6iE"}},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","print(f\"DecisionTree accuracy    =  {round(accuracy_score(y_train, pg), 2)*100} %\")\n","print(f\"BaggingClassifier accuracy =  {round(accuracy_score(y_train, pm), 2)*100} %\")\n","print(f\"RandomForestClassifier accuracy   =  {round(accuracy_score(y_train, pb), 2)*100} %\")\n","print(f\"GradientBoostingClassifier accuracy   =  {round(accuracy_score(y_train, pc), 2)*100} %\")\n","print(f\"KNeighborsClassifier accuracy   =  {round(accuracy_score(y_train, pk), 2)*100} %\")\n","print(f\"Gaussian accuracy    =  {round(accuracy_score(y_train, ps), 2)*100} %\")\n","print(f\"LogisticRegression accuracy   =  {round(accuracy_score(y_train, pt), 2)*100} %\")\n","print(f\"Support Vector Machine accuracy    =  {round(accuracy_score(y_train, pu), 2)*100} %\")\n","print(f\"SVC accuracy =  {round(accuracy_score(y_train, pr), 2)*100} %\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mvQ3Qt3Kt_s8","executionInfo":{"status":"ok","timestamp":1706508583710,"user_tz":-330,"elapsed":15,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"ef697398-89d1-49c0-e1b5-6f78bc592e58"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["DecisionTree accuracy    =  100.0 %\n","BaggingClassifier accuracy =  99.0 %\n","RandomForestClassifier accuracy   =  100.0 %\n","GradientBoostingClassifier accuracy   =  100.0 %\n","KNeighborsClassifier accuracy   =  100.0 %\n","Gaussian accuracy    =  90.0 %\n","LogisticRegression accuracy   =  93.0 %\n","Support Vector Machine accuracy    =  93.0 %\n","SVC accuracy =  94.0 %\n"]}]},{"cell_type":"markdown","source":["### Accuracy on testing dataset"],"metadata":{"id":"UmCfw9jbwAmC"}},{"cell_type":"code","source":["print(f\"DecisionTree accuracy    =  {round(accuracy_score(y_test, ypg), 2)*100} %\")\n","print(f\"BaggingClassifier accuracy =  {round(accuracy_score(y_test, ypm), 2)*100} %\")\n","print(f\"RandomForestClassifier accuracy   =  {round(accuracy_score(y_test, ypb), 2)*100} %\")\n","print(f\"GradientBoostingClassifier accuracy   =  {round(accuracy_score(y_test, ypc), 2)*100} %\")\n","print(f\"KNeighborsClassifier accuracy   =  {round(accuracy_score(y_test, ypk), 2)*100} %\")\n","print(f\"Gaussian accuracy    =  {round(accuracy_score(y_test, yps), 2)*100} %\")\n","print(f\"LogisticRegression accuracy   =  {round(accuracy_score(y_test, ypt), 2)*100} %\")\n","print(f\"Support Vector Machine accuracy    =  {round(accuracy_score(y_test, ypu), 2)*100} %\")\n","print(f\"SVC accuracy =  {round(accuracy_score(y_test, ypr), 2)*100} %\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Spl698uhlWNg","executionInfo":{"status":"ok","timestamp":1706508583710,"user_tz":-330,"elapsed":13,"user":{"displayName":"RISHIKA SHRIMAL","userId":"13644913633810186510"}},"outputId":"2ba36fbe-dc33-4968-bb0c-47f065ac9aa0"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["DecisionTree accuracy    =  92.0 %\n","BaggingClassifier accuracy =  93.0 %\n","RandomForestClassifier accuracy   =  94.0 %\n","GradientBoostingClassifier accuracy   =  94.0 %\n","KNeighborsClassifier accuracy   =  94.0 %\n","Gaussian accuracy    =  95.0 %\n","LogisticRegression accuracy   =  94.0 %\n","Support Vector Machine accuracy    =  94.0 %\n","SVC accuracy =  95.0 %\n"]}]}]}
